# 't=' for tab, 'n=' for new line at the end, or 'tn=' for both
# '[number]=<' to begin reading excercise, and '>' to finish (if not it will not append the string)

titulo=Cadenas de Caracteres

1=<
n=Escribir funciones que dada una cadena de caracteres:

tn=**a)** Imprima los dos primeros caracteres.

tn=**b)** Imprima los tres últimos caracteres.

tn=**c)** Imprima dicha cadena cada dos caracteres. Ej.: `'recta'` debería imprimir `'rca'`.

tn=**d)** Dicha cadena en sentido inverso. Ej.: `'hola mundo!'` debe imprimir `'!odnum aloh'`.

t=**e)** Imprima la cadena en un sentido y en sentido inverso. Ej: `'reflejo'` imprime `'reflejoojelfer'`.
>

2=<
n=Escribir funciones que dada una cadena y un caracter:

tn=**a)** Inserte el caracter entre cada letra de la cadena. Ej: `'separar'` y `','` debería devolver `'s,e,p,a,r,a,r'`.

t=**b)** Reemplace todos los espacios por el caracter. Ej: `'mi archivo de texto.txt'` y `'_'`, debería devolver
tn=   `'mi_archivo_de_texto.txt'`.

t=**c)** Reemplace todos los dígitos en la cadena por el caracter. Ej: `'su clave es: 1540'` y `'X'` debería
tn=   devolver `'su clave es: XXXX'`.

t=**d)** Inserte el caracter cada 3 dígitos en la cadena. Ej. `'2552552550'` y `'.'` debería devolver
t=   `'255.255.255.0'`.
>

3=<
Modificar las funciones anteriores (ejercicio **6.2**), para que reciban un parámetro que indique la cantidad máxima de reemplazos o inserciones a realizar.
>

4=<
Escribir una función que reciba una cadena que contiene un largo número entero y devuelva una cadena con el número y las separaciones de miles. Por ejemplo, si recibe `'1234567890'`, debe devolver `'1.234.567.890'`.
>

5=<
n=Escribir una función que dada una cadena de caracteres, devuelva:

tn=**a)** La primera letra de cada palabra. Por ejemplo, si recibe `'Universal Serial Bus'` debe devolver `'USB'`.

t=**b)** Dicha cadena con la primera letra de cada palabra en mayúsculas. Por ejemplo, si recibe
tn=   `'república argentina'` debe devolver `'República Argentina'`.

t=**c)** Las palabras que comiencen con la letra 'A'. Por ejemplo, si recibe `'Antes de ayer'` debe
t=   devolver `'Antes ayer'`.
>

6=<
n=Escribir funciones que dada una cadena de caracteres:

t=**a)** Devuelva solamente las letras consonantes. Por ejemplo, si recibe `'algoritmos'` o `'logaritmos'`
tn=   debe devolver `'lgrtms'`.

t=**b)** Devuelva solamente las letras vocales. Por ejemplo, si recibe `'sin consonantes'` debe devolver
tn=   `'i ooae'`.

t=**c)** Reemplace cada vocal por su siguiente vocal. Por ejemplo, si recibe `'vestuario'` debe devolver
tn=   `'vistaerou'`.

t=**d)** Indique si se trata de un palíndromo. Por ejemplo, 'anita lava la tina' es un palíndromo (se lee
t=   igual de izquierda a derecha que de derecha a izquierda).
>

7=<
n=Escribir funciones que dadas dos cadenas de caracteres:

t=**a)** Indique si la segunda cadena es una subcadena de la primera. Por ejemplo, `'cadena'` es una
tn=   subcadena de `'subcadena'`.

t=**b)** Devuelva la que sea anterior en orden alfábetico. Por ejemplo, si recibe `'kde'` y `'gnome'`
t=   debe devolver `'gnome'`.
>

8=<
Escribir una función que reciba una cadena de unos y ceros (es decir, un número en representación binaria) y devuelva el valor decimal correspondiente.
>

9=<
Implementar la función `pedir_entero(mensaje, min, max)`, que debe imprimir el mensaje y luego esperar a que el usuario ingrese un valor.
Si el valor ingresado no es un número entero, o no es un número entre `min` y `max` (inclusive), se le debe avisar al usuario y pedir el ingreso de otro valor.
Una vez que el usuario ingresa un valor válido, la función lo debe devolver.
Ejemplo:
```python
=>>> z = pedir_entero("¿Cuál es tu número favorito?", -50, 50)
¿Cuál es tu número favorito? [-50..50]:
Por favor ingresa un número entre -50 y 50.
¿Cuál es tu número favorito? [-50..50]: hola
Por favor ingresa un número entre -50 y 50.
¿Cuál es tu número favorito? [-50..50]: -60
Por favor ingresa un número entre -50 y 50.
¿Cuál es tu número favorito? [-50..50]: 51
Por favor ingresa un número entre -50 y 50.
¿Cuál es tu número favorito? [-50..50]: -16
>>> z
-16
```
>