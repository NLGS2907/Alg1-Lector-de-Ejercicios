{
    "titulo": "Tuplas y Listas",
    "1": {
        "titulo": [

        ],
        "descripcion": [
            "Escribir una funci√≥n que reciba una tupla de elementos e indique si se encuentran",
            "ordenados de menor a mayor o no."
        ],
        "campos": {

        },
        "pie": [

        ]
    },
    "2": {
        "titulo": [

        ],
        "descripcion": [
            "**Domin√≥**"
        ],
        "campos": {
            "a)": [
                "Escribir una funci√≥n que indique si dos fichas de domin√≥ encajan o no.",
                "Las fichas son recibidas en dos tuplas, por ejemplo: `(3, 4)` y `(5, 4)`."
            ],
            "b)": [
                "Escribir una funci√≥n que indique si dos fichas de domin√≥ encajan o no.",
                "Las fichas son recibidas en una cadena, por ejemplo: `3-4` `2-5`. **¬π**"
            ]
        },
        "pie": [
            "¬π Nota: Utilizar la funci√≥n `split` de las cadenas."
        ]
    },
    "3": {
        "titulo": [

        ],
        "descripcion": [
            "**Campa√±a electoral**"
        ],
        "campos": {
            "a)": [
                "Escribir una funci√≥n que reciba una tupla con nombres, y para cada nombre imprima",
                "el mensaje *Estimado <nombre>, vote por m√≠*."
            ],
            "b)": [
                "Escribir una funci√≥n que reciba una tupla con nombres, una posici√≥n de origen *p*",
                "y una cantidad *n*, e imprima el mensaje anterior para los *n* nombres que se",
                "encuentran a partir de la posici√≥n *p*."
            ],
            "c)": [
                "Modificar las funciones anteriores para que tengan en cuenta el g√©nero del",
                "destinatario, para ello, deber√°n recibir una tupla de tuplas, conteniendo el",
                "nombre y el g√©nero."
            ]
        },
        "pie": [

        ]
    },
    "4": {
        "titulo": [

        ],
        "descripcion": [
            "**Vectores**"
        ],
        "campos": {
            "a)": [
                "Escribir una funci√≥n que reciba dos vectores y devuelva su producto escalar."
            ],
            "b)": [
                "Escribir una funci√≥n que reciba dos vectores y devuelva si son o no ortogonales."
            ],
            "c)": [
                "Escribir una funci√≥n que reciba dos vectores y devuelva si son paralelos o no."
            ],
            "d)": [
                "Escribir una funci√≥n que reciba un vector y devuelva su norma."
            ]
        },
        "pie": [

        ]
    },
    "5": {
        "titulo": [

        ],
        "descripcion": [
            "Dada una lista de n√∫meros enteros, escribir una funci√≥n que:"
        ],
        "campos": {
            "a)": [
                "Devuelva una lista con todos los que sean primos."
            ],
            "b)": [
                "Devuelva la sumatoria y el promedio de los valores."
            ],
            "c)": [
                "Devuelva una lista con el factorial de cada uno de esos n√∫meros."
            ]
        },
        "pie": [

        ]
    },
    "6": {
        "titulo": [

        ],
        "descripcion": [
            "Dada una lista de n√∫meros enteros y un entero *k*, escribir una funci√≥n que:"
        ],
        "campos": {
            "a)": [
                "Devuelva tres listas, una con los menores, otra con los mayores y otra con los iguales a *k*."
            ],
            "b)": [
                "Devuelva una lista con aquellos que son m√∫ltiplos de *k*."
            ]
        },
        "pie": [

        ]
    },
    "7": {
        "titulo": [

        ],
        "descripcion": [
            "Escribir una funci√≥n que reciba una lista de tuplas (Apellido, Nombre, Inicial_segundo_nombre)",
            "y devuelva una lista de cadenas donde cada una contenga primero el nombre, luego la",
            "inicial con un punto, y luego el apellido."
        ],
        "campos": {

        },
        "pie": [

        ]
    },
    "8": {
        "titulo": [

        ],
        "descripcion": [
            "**Inversi√≥n de Listas**"
        ],
        "campos": {
            "a)": [
                "Realizar una funci√≥n que, dada una lista, devuelva una nueva lista cuyo contenido",
                "sea igual a la original pero invertida.",
                "As√≠, dada la lista `['Di', 'buen', 'd√≠a', 'a', 'papa']`, deber√° devolver `['papa', 'a', 'd√≠a', 'buen', 'Di']`."
            ],
            "b)": [
                "Realizar otra funci√≥n que invierta la lista, pero en lugar de devolver una nueva,",
                "modifique la lista dada para invertirla, **sin** usar listas auxiliares."
            ]
        },
        "pie": [

        ]
    },
    "9": {
        "titulo": [

        ],
        "descripcion": [
            "Escribir una funci√≥n `empaquetar` para una lista, donde empaquetar significa indicar",
            "la repetici√≥n de valores consecutivos mediante una tupla (valor, cantidad de repeticiones).",
            "Por ejemplo, `empaquetar([1, 1, 1, 3, 5, 1, 1, 3, 3])` debe devolver `[(1, 3), (3, 1), (5, 1), (1, 2), (3, 2)]`."
        ],
        "campos": {

        },
        "pie": [

        ]
    },
    "10": {
        "titulo": [

        ],
        "descripcion": [
            "**Matrices**"
        ],
        "campos": {
            "a)": [
                "Escribir una funci√≥n que reciba dos matrices y devuelva la suma."
            ],
            "b)": [
                "Escribir una funci√≥n que reciba dos matrices y devuelva el producto."
            ],
            "c)": [
                "**‚ãÜ** Escribir una funci√≥n que opere sobre una matriz y mediante",
                "*eliminaci√≥n gaussiana* devuelva una matriz triangular superior."
            ],
            "d)": [
                "**‚ãÜ** Escribir una funci√≥n que indique si un grupo de vectores, recibidos",
                "mediante una lista, son linealmente independientes o no."
            ]
        },
        "pie": [

        ]
    },
    "11": {
        "titulo": [

        ],
        "descripcion": [
            "**‚ãÜ Plegado de un texto**\n",

            "Escribir una funci√≥n que reciba un p√°rrafo de texto (palabras separadas",
            "por espacios) y una longitud ùëõ, y devuelva una lista conteniendo l√≠neas de",
            "texto de longitud m√°xima ùëõ. Las l√≠neas deben ser cortadas correctamente en ",
            "los espacios (sin cortar las palabras).",
            "Asumir que ninguna palabra tiene longitud mayor a ùëõ.",
            "Ejemplo:",
            "```python",
            ">>> plegar('El viejo Se√±or G√≥mez ped√≠a queso, kiwi y habas, pero le ha tocado un saxof√≥n', 20)",
            "",
            "['El viejo Se√±or G√≥mez', 'ped√≠a queso, kiwi y', 'habas, pero le ha' 'tocado un saxof√≥n']",
            "```"
        ],
        "campos": {

        },
        "pie": [

        ]
    },
    "12": {
        "titulo": [

        ],
        "descripcion": [
            "**Funciones que reciben funciones**"
        ],
        "campos": {
            "a)": [
                "Escribir una funcion llamada `map`, que reciba una funci√≥n y una lista y devuelva",
                "la lista que resulta de aplicar la funci√≥n recibida a cada uno de los elementos de",
                "la lista recibida."
            ],
            "b)": [
                "Escribir una funci√≥n llamada `filter`, que reciba una funci√≥n y una lista y devuelva",
                "una lista con los elementos de la lista recibida para los cuales la funci√≥n recibida",
                "devuelve un valor verdadero."
            ],
            "c)": [
                "¬øEn qu√© ejercicios de esta gu√≠a podr√≠a haber utilizado estas funciones?"
            ]
        },
        "pie": [

        ]
    },
    "13": {
        "titulo": [

        ],
        "descripcion": [
            "**‚ãÜ Juegos sencillos (¬°o no tanto!)\n**",

            "Estos ejercicios permiten aplicar todo lo aprendido hasta ahora.\n",
            "*Recomendaci√≥n*: pensar bien el **dise√±o**; y en particular elegir una",
            "**estructura de datos** apropiada para representar el estado del juego.",
            "Algunas preguntas que pueden ayudar:\n",

            "\t‚Ä¢ ¬øC√≥mo actualizamos el estado del juego seg√∫n cada acci√≥n realizada?",
            "\t‚Ä¢ ¬øC√≥mo detectamos si un movimiento es v√°lido o no?",
            "\t‚Ä¢ ¬øC√≥mo detectamos si el juego ha terminado?",
            "\t‚Ä¢ ¬øC√≥mo se muestra la informaci√≥n en la consola a los jugadores?",
            "\t‚Ä¢ ¬øC√≥mo hacen los jugadores para ingresar las acciones a realizar?\n",

            "Escribir un programa que permita jugar**¬π**:"
        ],
        "campos": {
            "a)": [
                "Torres de Han√≥i (https://es.wikipedia.org/wiki/Torres_de_Hanoi)"
            ],
            "b)": [
                "Ta-Te-Ti (https://es.wikipedia.org/wiki/Tres_en_linea)"
            ],
            "c)": [
                "Nim (https://es.wikipedia.org/wiki/Nim_(juego))"
            ],
            "d)": [
                "Generala (https://es.wikipedia.org/wiki/Generala)"
            ]
        },
        "pie": [
            "¬π No es el objetivo implementar una inteligencia artificial: en los ",
            "juegos de dos o m√°s jugadores, solo aceptaremos jugadores humanos."
        ]
    }
}